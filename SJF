//SJF
#include <stdio.h>
void sjf_scheduling(int processes[], int arrival_time[], int burst_time[], int n, int waiting_time[], int turnaround_time[]) 
{
    int completion_time[n];
    int remaining_time[n];
    int total_completed = 0;
    int current_time = 0;
    float total_waiting_time = 0, total_turnaround_time = 0;
    for (int i = 0; i < n; i++) 
        remaining_time[i] = burst_time[i];
    while (total_completed < n) 
    {
        int min_burst_index = -1;
        int min_burst = 999999;
        for (int i = 0; i < n; i++)
        {
            if (arrival_time[i] <= current_time && remaining_time[i] < min_burst && remaining_time[i] > 0) 
            {
                min_burst = remaining_time[i];
                min_burst_index = i;
            }
        }
        if (min_burst_index == -1) 
        {
            current_time++;
            continue;
        }
        waiting_time[min_burst_index] = current_time - arrival_time[min_burst_index];
        turnaround_time[min_burst_index] = waiting_time[min_burst_index] + burst_time[min_burst_index];
        current_time += burst_time[min_burst_index];
        completion_time[min_burst_index] = current_time;
        remaining_time[min_burst_index] = 0; 
        total_completed++;
        total_waiting_time += waiting_time[min_burst_index];
        total_turnaround_time += turnaround_time[min_burst_index];
    }
    float avg_waiting_time = total_waiting_time / n;
    float avg_turnaround_time = total_turnaround_time / n;
    printf("Process ID\tAT\tBT\tWT\tTAT\n");
    for (int i = 0; i < n; i++)
    {
        printf("%d\t\t%d\t\t%d\t\t%d\t\t%d\n", processes[i], arrival_time[i], burst_time[i], waiting_time[i], turnaround_time[i]);
    }
    printf("\nAverage Waiting Time: %.2f", avg_waiting_time);
    printf("\nAverage Turnaround Time: %.2f\n", avg_turnaround_time);
}
void main() 
{
    int n;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    int processes[n];
    int arrival_time[n];
    int burst_time[n];
    int waiting_time[n];
    int turnaround_time[n];
    for (int i = 0; i < n; i++) 
    {
        processes[i] = i + 1;
        printf("Enter Arrival Time for Process %d: ", processes[i]);
        scanf("%d", &arrival_time[i]);
        printf("Enter Burst Time for Process %d: ", processes[i]);
        scanf("%d", &burst_time[i]);
        waiting_time[i] = 0;
        turnaround_time[i] = 0;
    }
    sjf_scheduling(processes, arrival_time, burst_time, n, waiting_time, turnaround_time);
}
