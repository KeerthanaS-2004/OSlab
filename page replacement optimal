////optimal
#include <stdio.h>
#include <stdlib.h>
void optimalPageReplacement(int frames, int pageReferences[], int n)
{
    int *frameArray = (int *)malloc(frames * sizeof(int));
    int i, j, k, pageFaults = 0, isPresent, furthest;
    for (i = 0; i < frames; i++)
        frameArray[i] = -1;
    printf("Page Reference String:\n");
    for (i = 0; i < n; i++)
        printf("%d ", pageReferences[i]);
    printf("\n\n");
    printf("Frames Status:\n");
    for (i = 0; i < n; i++)
    {
        isPresent = 0;
        for (j = 0; j < frames; j++)
            if (frameArray[j] == pageReferences[i])
            {
                isPresent = 1;
                break;
            }
        if (!isPresent)
        {
            if (i < frames)
                frameArray[i] = pageReferences[i];
            else
            {
                int indexToReplace = -1;
                furthest = i;
                for (j = 0; j < frames; j++)
                {
                    int nextUse = -1;
                    for (k = i + 1; k < n; k++)
                        if (frameArray[j] == pageReferences[k])
                        {
                            nextUse = k;
                            break;
                        }
                    if (nextUse == -1)
                    {
                        indexToReplace = j;
                        break;
                    }
                    else if (nextUse > furthest)
                    {
                        furthest = nextUse;
                        indexToReplace = j;
                    }
                }
                frameArray[indexToReplace] = pageReferences[i];
            }
            pageFaults++;
        }
        for (k = 0; k < frames; k++)
        {
            if (frameArray[k] != -1)
                printf("%d ", frameArray[k]);
            else
                printf("- ");
        }
        printf("\tPage Fault %d\n",pageFaults);
    }
    printf("\nTotal Page Faults: %d\n", pageFaults);
    free(frameArray);
}
void main()
{
    int frames, n, i;
    printf("Enter number of frames: ");
    scanf("%d", &frames);
    printf("Enter number of page references: ");
    scanf("%d", &n);
    int *pageReferences = (int *)malloc(n * sizeof(int));
    printf("Enter the page references (space-separated): ");
    for (i = 0; i < n; i++)
        scanf("%d", &pageReferences[i]);
    optimalPageReplacement(frames, pageReferences, n);
    free(pageReferences);
}
